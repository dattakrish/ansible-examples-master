###########################################################################
#   SSC Automation - Windows Build - SQL Installation
#   Confluence:
#   Move SQL Install Files
#   Author: Barry Field
#   Creation Date: 28/01/19
#   Last Update Date: 08/04/19
###########################################################################

---
- name: SQL Install
  hosts: all
  gather_facts: yes
  become_method: runas
  tasks:

#Define Source File Location {{ sourcePath }}
  - name: Define Source Files for SQL version 2016Ent
    set_fact:
        sourcePath: "{{ sql2016Ent_source }}"
    when: sql_ver == 'SQL2016Ent'

  - name: Define Source Files for SQL version 2016Std
    set_fact:
        sourcePath: "{{ sql2016Std_source }}"
    when: sql_ver == 'SQL2016Std'

  - name: Define Source Files for SQL version 2016Dev
    set_fact:
      sourcePath: "{{ sql2016Dev_source }}"
    when: sql_ver == 'SQL2016Dev'

  - name: Define Source Files for SQL version 2017Ent
    set_fact:
        sourcePath: "{{ sql2017Ent_source }}"
    when: sql_ver == 'SQL2017Ent'

  - name: Define Source Files for SQL version 2017Std
    set_fact:
        sourcePath: "{{ sql2017Std_source }}"
    when: sql_ver == 'SQL2017Std'
  
  - name: Define Source Files for SQL version 2017Dev
    set_fact:
        sourcePath: "{{ sql2017Dev_source }}"
    when: sql_ver == 'SQL2017Dev'

#Define SXS Source {{ sxs_source }}

  - name: Define SXS Source for 2012
    set_fact:
        sxs_source: "{{ sxs2012_source }}"
    when: "'2012' in ansible_os_name"

  - name: Define SXS Source for 2016
    set_fact:
        sxs_source: "{{ sxs2016_source }}"
    when: "'2016' in ansible_os_name"

#Begin Tasks
  - name: Copy Source Files Directory
    win_copy:
      src: "{{ sourcePath }}"
      dest: C:\tmp\SQL
      state: present

  - name: Copy SXS Directory
    win_copy:
      src: "{{ sxs_source }}"
      dest: C:\tmp
      state: present

  - name: install AD PS Module
    win_feature:
      name: RSAT-AD-Powershell
      source: C:\tmp\sxs
      state: present

  - name: copy SQLServiceAccCreation.ps1 to script host
    win_copy:
      src: SQLServiceAccCreation.ps1
      dest: c:\tmp\

  - name: copy SQL_LocalPreReq.ps1 to script host
    win_copy:
      src: SQL_LocalPreReq.ps1
      dest: c:\tmp\

#Define Zip File {{ zipSource }}
  - name: Define Zip Source 2016Ent
    set_fact:
        zipSource: "c:\\tmp\\SQL\\SQL_2016_Ent_x64_inc_SP2.zip"
    when: sql_ver == 'SQL2016Ent'

  - name: Define Zip Source 2016Std
    set_fact:
        zipSource: "c:\\tmp\\SQL\\SQL_2016_Std_x64_inc_SP2.zip"
    when: sql_ver == 'SQL2016Std'

  - name: Define Zip Source 2016Dev
    set_fact:
        zipSource: "c:\\tmp\\SQL\\SQL_2016_Dev_x64_inc_SP2.zip"
    when: sql_ver == 'SQL2016Dev'

  - name: Define Zip Source 2017Ent
    set_fact:
        zipSource: "c:\\tmp\\SQL\\SQL_2017_Ent_x64_RTM.zip"
    when: sql_ver == 'SQL2017Ent'

  - name: Define Zip Source 2017Std
    set_fact:
        zipSource: "c:\\tmp\\SQL\\SQL_2017_Std_x64_RTM.zip"
    when: sql_ver == 'SQL2017Std'

  - name: Define Zip Source 2017Dev
    set_fact:
        zipSource: "c:\\tmp\\SQL\\SQL_2017_Dev_x64_RTM.zip"
    when: sql_ver == 'SQL2017Dev'

  - name: Unzip SQL Files
    win_unzip:
      src: "{{ zipSource }}"
      dest: c:\tmp\SQL\SQL_Install

#Define INI File {{ install_template }}
  - name: Define INI file 2016Ent
    set_fact:
        install_template: "C:\\tmp\\SQL\\SQL_Install\\SQL_2016_Ent_x64_inc_SP2\\SQL2016Standalone.ini"
    when: sql_ver == 'SQL2016Ent'

  - name: Define INI file 2016Dev
    set_fact:
        install_template: "C:\\tmp\\SQL\\SQL_Install\\SQL_2016_Dev_x64_inc_SP2\\SQL2016Standalone.ini"
    when: sql_ver == 'SQL2016Dev'

  - name: Define INI file 2016Std
    set_fact:
        install_template: "C:\\tmp\\SQL\\SQL_Install\\SQL_2016_Std_x64_inc_SP2\\SQL2016Standalone.ini"
    when: sql_ver == 'SQL2016Std'

  - name: Define INI file 2017Ent
    set_fact:
        install_template: "C:\\tmp\\SQL\\SQL_Install\\SQL_2017_Ent_x64_RTM\\SQL2017Standalone.ini"
    when: sql_ver == 'SQL2017Ent'

  - name: Define INI file 2017Std
    set_fact:
        install_template: "C:\\tmp\\SQL\\SQL_Install\\SQL_2017_Std_x64_RTM\\SQL2017Standalone.ini"
    when: sql_ver == 'SQL2017Std'

  - name: Define INI file 2017Dev
    set_fact:
        install_template: "C:\\tmp\\SQL\\SQL_Install\\SQL_2017_Dev_x64_RTM\\SQL2017Standalone.ini"
    when: sql_ver == 'SQL2017Dev'

# #Define CMD File {{ cmd_File }}
#   - name: Define CMD File 2016
#     set_fact:
#       cmd_File: "C:\\tmp\\SQL\\SQL2016Standalone.cmd"
#     when: "'SQL2016' in sql_ver"
  
#   - name: Define CMD File 2017
#     set_fact:
#       cmd_File: "C:\\tmp\\SQL\\SQL2017Standalone.cmd"
#     when: "'SQL2017' in sql_ver "

#Define working path {{ working_dir }}
  - name: Define working directory 2016Ent
    set_fact:
        working_Dir: C:\tmp\SQL\SQL_Install\SQL_2016_Ent_x64_inc_SP2\setup.exe
    when: sql_ver == 'SQL2016Ent'
  
  - name: Define working directory 2016Dev
    set_fact:
        working_Dir: C:\tmp\SQL\SQL_Install\SQL_2016_Dev_x64_inc_SP2\setup.exe
    when: sql_ver == 'SQL2016Dev'

  - name: Define working directory 2016Std
    set_fact:
        working_Dir: C:\tmp\SQL\SQL_Install\SQL_2016_Std_x64_inc_SP2\setup.exe
    when: sql_ver == 'SQL2016Std'

  - name: Define working directory 2017Ent
    set_fact:
        working_Dir: C:\tmp\SQL\SQL_Install\SQL_2017_Ent_x64_RTM\setup.exe
    when: sql_ver == 'SQL2017Ent'

  - name: Define working directory 2017Dev
    set_fact:
        working_Dir: C:\tmp\SQL\SQL_Install\SQL_2017_Dev_x64_RTM\setup.exe
    when: sql_ver == 'SQL2017Dev'

  - name: Define working directory 2017Std
    set_fact:
        working_Dir: C:\tmp\SQL\SQL_Install\SQL_2017_Std_x64_RTM\setup.exe
    when: sql_ver == 'SQL2017Std'

## Run Service Account Powershell
  - name: Run SQLServiceAccCreation.ps1
    win_shell: "{{ powershellPath1 }} -sqlCollation \"{{ sql_Collation }}\" -installTemplate \"{{ install_template }}\" -businessunit \"{{ business_unit }}\" -supportgroup \"{{ support_group }}\""
    become: yes
    become_user: SYSTEM

  - pause:
      seconds: 10

## Run Service Account Powershell
  - name: Run SQL_LocalPreReq.ps1
    win_shell: "{{ powershellPath }}" ## -cmdFile \"{{ cmd_File }}\" -workingDir \"{{ working_Dir }}\""

  - pause: 
      seconds: 10

##install SQL
  - name: Install SQL
    win_package:
      path: "{{ working_Dir }}"
      arguments: /configurationfile="{{ install_template }}"
      creates_service: "SQL Server (MSSQLSERVER)"
      state: present
    become: yes
    become_user: SYSTEM
    async: 1800
    poll: 30
    register: installresult
   
  - fail:
      msg: "SQL has failed to install."
    when: installresult is failed

  - name: Remove Source Files
    win_copy:
      src: "{{ destPath }}"
      state: absent
    when: installresult is success

  - name: Remove PS Source File
    win_copy:
     src: "{{ powershellPath }}"
     state: absent
    when: installresult is success

  - name: Remove PS Source File
    win_copy:
     src: "{{ powershellPath1 }}"
     state: absent
    when: installresult is success