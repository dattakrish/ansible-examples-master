---
# Created by Michael Barron 27/03/2019
# Modified by Michael Barron 27/03/2019
# Service Acceptance check that runs on the Target Server

- hosts: all
  tasks:

##################################################################################
########## Check RDP and Admin Accounts have been added to the server ############
##################################################################################

  # Work out short domain name from full doamin name and store as fact
  - name: Define short name for EXPERIANUK
    set_fact:
      short_domain: EXPERIANUK
    when: ansible_windows_domain == 'uk.experian.local'

  - name: Define short name for GDC
    set_fact:
      short_domain: GDC
    when: ansible_windows_domain == 'gdc.local'

  - name: Define short name for IPANI
    set_fact:
      short_domain: IPANIUK
    when: ansible_windows_domain == 'ipani.uk.experian.com'

# Work out Admin and RDP Group names from hostname and store as fact
  - name: Define Admin Group Name
    set_fact:
      admin_account: "WS-ADM_{{ ansible_hostname }}"
  
  - name: Define RDP Group Name
    set_fact:
      rdp_account: "WS-STD_{{ ansible_hostname }}"

# Local access groups exist created by Configure Local Group Access role Admin
  - name: Check local Admin Group membership
    win_group_membership:
      name: Administrators
      members:
        - "{{ short_domain }}\\{{ admin_account }}"
      state: present
    register: local_admin_group

# Local access groups exist created by Configure Local Group Access role RDP
  - name: Check local RDP Group membership
    win_group_membership:
      name: Remote Desktop Users
      members:
        - "{{ short_domain }}\\{{ rdp_account }}"
      state: present
    register: local_rdp_group

# Check if the Check local Admin Group membership changed anything
  - name: Check if the Check local Admin Group membership changed anything
    fail:
      msg: "Group Doesnt Exist {{ admin_account }}"
    when: local_admin_group.changed == true

# Check if the Check local Admin Group membership changed anything
  - name: Check if the Check local RDP Group membership changed anything
    fail:
      msg: "Group Doesnt Exist {{ rdp_account }}"
    when: local_rdp_group.changed == true

# Success Debug
  - name: Success Debug
    debug:
      msg: "Both the Admin and RDP groups exist on the server"
    when:
      - local_admin_group.changed == false
      - local_rdp_group.changed == false

##################################################################################
############# Check FireEye is installed when not a Database server ##############
##################################################################################

# Check FireEye is installed if not a Database server block
  - name: Block for executing command only when not Database
    block:

# Gather FireEye Registry version key value
    - name: Gather FireEye version from Registry
      win_reg_stat:
        path: HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\{D82800D5-27A8-4FAC-9564-3F700157BA2F}\
        name: DisplayVersion
      register: fireeye_results

# Debug FireEye results var
    - name: Debug FireEye Results var
      debug:
        var: fireeye_results
    
    - name: FireEye Version Check
      debug:
        msg: "Fireeye required Version is {{ fireEye_Version }} installed version is {{ fireeye_results.value }}"
      when:
        - fireeye_results.value == fireEye_Version
        - fireeye_results is defined

    - name: Fail if FireEye is not installed
      fail:
        msg: "FireEye not found or is the incorrect version!"
      when: fireeye_results is undefined or fireeye_results.value != fireEye_Version

# Block End
    when:
      - server_role != 'Database'

##################################################################################
############# Check that interfaces called Prinary and Backup exist ##############
##################################################################################
# "Check that interfaces called Prinary and Backup exist"
  
  - debug:
      msg: "Item Name {{ item.connection_name }}"
    when: "'Primary' in item.connection_name"
    register: primary_result
    loop: "{{ ansible_interfaces }}"

  - debug:
      msg: "Item Name {{ item.connection_name }}"
    when: "'Backup' in item.connection_name"
    register: backup_result
    loop: "{{ ansible_interfaces }}"

  - debug:
      msg: "{{ primary_result }}"

  - debug:
      msg: "{{ backup_result }}"

  - name: Fail if No Primary
    fail:
      msg: "No Primary Network Adapter Found!"
    when: primary_result is not defined

  - name: Fail if No Backup
    fail:
      msg: "No Backup Network Adapter Found!"
    when: backup_result is not defined

##################################################################################
############# Check that interfaces called Prinary and Backup exist ##############
##################################################################################
#Safe Servlet
  
