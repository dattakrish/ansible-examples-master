
---

  # Install Telnet Client all features
  - name: Install Telnet Client
    win_feature:
      name: "Telnet-Client"
      state: present
      restart: no
      include_sub_features: yes
      include_management_tools: yes

  # Install SNMP Service all features
  - name: Install SNMP Service
    win_feature:
      name: "SNMP-Service"
      state: present
      restart: no
      include_sub_features: yes
      include_management_tools: yes

  # Install Windows Server Backup all features
  - name: Install Windows Server Backup
    win_feature:
      name: "Windows-Server-Backup"
      state: present
      restart: no
      include_sub_features: yes
      include_management_tools: yes

  # Install MPIO if its not a VM
  - name: Install MPIO if not a VM
    win_feature:
      name: "MultiPath-IO"
      state: present
      restart: no
      include_sub_features: yes
      include_management_tools: yes
    when: "'VMware' not in ansible_product_name"

  # Uninstall Windows Defender Feature
  - name: Uninstall Windows Defender Feature
    win_feature:
      name: "Windows-Defender-Features"
      state: absent
      restart: no

  # Uninstall SMB v1 Feature
  - name: Uninstall SMB v1 Feature
    win_feature:
      name: "FS-SMB1"
      state: absent
      restart: no

  # Change time for services startup from 30 to 90 seconds
  - name: Change time for services startup from 30 to 90 seconds
    win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control
      name: ServicesPipeTimeout
      data: 90000
      type: dword

  # Change unidentified NetConnection Profiles to Private
  - name: Change unidentified NetConnection Profiles to Private
    win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\CurrentVersion\Networklist\Signatures\010103000F0000F0010000000F0000F0C967A3643C3AD745950DA7859209176EF5B87C875FA20DF21951640E807D7C24\
      name: Category
      data: 1
      type: dword

  - name: Create registry key to indicate server has been built with “Standard Build” 
    win_regedit:
      path: HKLM:\SOFTWARE\Experian\
      name: Build Description
      data: Windows Server 2016 Hardened Build
      type: string

  # Create registry key to record the date when server was built
  - name: Create registry key to record the date when server was built
    win_regedit:
      path: HKLM:\SOFTWARE\Experian\
      name: Build Date
      data: "{{ ansible_date_time.date }}"
      type: string

  # Display Computer Icon on Desktop
  - name: Display Computer Icon on Desktop
    win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel\
      name: "{20D04FE0-3AEA-1069-A2D8-08002B30309D}"
      data: 0
      type: dword

  #Uninstall the following protocols / services:
  #QOS Packet Scheduler
  #Link-Layer Topology Mapper IO Driver
  #Link-Layer Topology Mapper IO Responder
  - win_shell: C:\Windows\System32\netcfg.exe -u ms_pacer
  - win_shell: C:\Windows\System32\netcfg.exe -u ms_lltdio
  - win_shell: C:\Windows\System32\netcfg.exe -u ms_rspndr
  - win_shell: C:\Windows\System32\netcfg.exe -u ms_lldp #MS LLDP Protocol Driver is new for server 2016. Does not exist on core.

  # Disable Windows Media Player - WORKS IN 2.8
  # - name: Disable Windows Media Player
  #  win_optional_feature:
  #    name: WindowsMediaPlayer
  #    state: absent

  # Disable Windows Media Player
  # - name: Disable Windows Media Player
  # win_shell: dism /online /Disable-Feature /FeatureName:WindowsMediaPlayer /NoRestart

  # Disable Windows Media Player
  - name: Disable Windows Media Player
    win_shell: Disable-WindowsOptionalFeature -Online -FeatureName "WindowsMediaPlayer" -NoRestart

  #Create the local account called SS000DA and
  #Set password, need to pass from Ansible
  #Add to local administrators
  #Enable account
  - name: Create the local Administrators account {{ SIMPLE_USERNAME }}
    win_user:
      name: "{{ SIMPLE_USERNAME }}"
      password: "{{ SIMPLE_PASSWORD }}"
      description: SSC Local Administrator Account
      account_disabled: no
      state: present
      groups_action: add
      groups:
        - Administrators

  # Create C:\tmp & C:\temp, remove local Users access to both
  - name: Create directory C:\tmp
    win_file:
      path: c:\tmp
      state: directory

  - name: Renove Users access from C:\temp
    win_acl:
      path: C:\tmp
      user: Users
      rights: FullControl
      type: allow
      state: absent

  - name: Create directory C:\temp
    win_file:
      path: c:\temp
      state: directory

  - name: Renove Users access from C:\temp
    win_acl:
      path: C:\temp
      user: Users
      rights: FullControl
      type: allow
      state: absent

  # Copy LGPO.exe to the server, used in ConfigureWin2016.ps1 below.
  - name: Copy LGPO.exe to server
    win_copy:
      src: "{{ src_config2016_path }}/LGPO.exe"
      dest: c:\tmp\

  # Copy uksnmpconfig.reg to the server, used in ConfigureWin2016.ps1 below.
  - name: Copy uksnmpconfig.reg to server
    win_copy:
      src: "{{ src_config2016_path }}/uksnmpconfig.reg"
      dest: c:\tmp\

  # Copy Backup GPO Folder to server
  - name: Copy Backup GPO folder to C:\tmp (results in C:\tmp\Windows2016LGPOBackup)
    win_copy:
      src: "{{ src_config2016_path }}/Windows2016LGPOBackup"
      dest: C:\tmp

  # Copy file SecurityRollupWin2016.reg to the server, merge and then remove
  - name: Copy SecurityRollupWin2016.reg to server
    win_copy:
      src: "{{ src_config2016_path }}/SecurityRollupWin2016.reg"
      dest: c:\tmp\

  - name: Apply SecurityRollupWin2016.reg
    win_regmerge:
      path: C:\tmp\SecurityRollupWin2016.reg

  - name: remove SecurityRollupWin2016.reg from target server
    win_file:
      path: C:\tmp\SecurityRollupWin2016.reg
      state: absent

  # Copy file ConfigureWin2016.ps1 to the server execute and then remove
  - name: Copy ConfigureWin2016.ps1 to server
    win_copy:
      src: Configure_Win_2016.ps1
      dest: c:\tmp\

  - name: Run remote PowerShell Script ConfigureWin2016.ps1 without backup
    win_shell: "C:/tmp/Configure_Win_2016.ps1 -PrimaryAdapterCurrentName \"Ethernet0\" -DomainFQDN \"{{ ansible_domain }}\""
    when: not backup_required

  - name: Run remote PowerShell Script ConfigureWin2016.ps1 with backup
    win_shell: "C:/tmp/Configure_Win_2016.ps1 -PrimaryAdapterCurrentName \"Ethernet0\" -BackupAdapterInstalled \"Yes\" -BackupAdapterCurrentName \"Ethernet1\" -DomainFQDN \"{{ ansible_domain }}\""
    when: backup_required

  - name: remove ConfigureWin2016.ps1 from target server
    win_file:
      path: C:\tmp\Configure_Win_2016.ps1
      state: absent

  # Remove LGPO.exe from the server
  - name: Remove LGPO.exe from the server
    win_file:
      path: C:\tmp\LGPO.exe
      state: absent

  # Remove uksnmpconfig.reg from the server
  - name: Remove uksnmpconfig.reg from the server
    win_file:
      path: C:\tmp\uksnmpconfig.reg
      state: absent

  # Remove Backup GPO Policy
  - name: Remove Backup GPO Folder from the server
    win_file:
      path: C:\tmp\Windows2016LGPOBackup
      state: absent

  # Reboot Server
  - win_reboot:
